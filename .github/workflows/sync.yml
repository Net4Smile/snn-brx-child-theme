name: Sync Files

on:
  push:
    branches:
      - main

jobs:
  sync:
    runs-on: ubuntu-latest

    env:
      FILES_TO_SYNC: |
        includes/settings-page.php
        includes/custom-field-settings.php
        includes/taxonomy-settings.php
        includes/post-types-settings.php
        includes/301-redirect.php
        includes/404-logging.php
        includes/accessibility-settings.php
        includes/block-editor-settings.php
        includes/custom-code-snippets.php
        includes/cookie-banner.php
        includes/security-page.php
        includes/disable-xmlrpc.php
        includes/login-math-captcha.php
        includes/login-settings.php
        includes/media-settings.php
        includes/smtp-settings.php
        includes/mail-logging.php
        includes/search-loggins.php

    steps:
      - name: Checkout Source Repo
        uses: actions/checkout@v4
        with:
          path: source-repo

      - name: Checkout Destination Repo
        uses: actions/checkout@v4
        with:
          repository: sinanisler/snn-block
          path: destination-repo
          token: ${{ secrets.SNNBRXSYNCSECRET }}

      - name: Copy files to Destination Repo
        run: |
          # Loop through each file defined in the FILES_TO_SYNC variable.
          for file_path in $FILES_TO_SYNC; do
            echo "Processing file: $file_path"
            # Create the destination directory structure if it doesn't exist.
            mkdir -p "destination-repo/$(dirname "$file_path")"
            # Copy the file from the source to the destination.
            cp "source-repo/$file_path" "destination-repo/$file_path"
          done

      - name: Commit and Push Changes
        run: |
          cd destination-repo
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Check if there are any changes to the files. If not, the script will exit.
          if [[ -z $(git status --porcelain) ]]; then
            echo "No changes to commit."
            exit 0
          fi
          
          # Add each synced file to the git staging area.
          for file_path in $FILES_TO_SYNC; do
            git add "$file_path"
          done

          # Commit the changes with a generic message.
          git commit -m "SNN-BRX Sync"
          git push
