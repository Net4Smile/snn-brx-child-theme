name: Bump version and Release

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Display current style.css before update
        run: cat style.css

      - name: Normalise commit message (lower-case once)
        id: msg
        run: |
          echo "msg=$(echo "${{ github.event.head_commit.message }}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Get commit messages since last release
        id: get_commits
        run: |
          current_version=$(grep -oP 'Version:\s*\K[0-9.]+' style.css)
          last_tag="v${current_version}"
          if git rev-parse "$last_tag" >/dev/null 2>&1; then
            commits=$(git log "$last_tag"..HEAD --pretty=format:"- %s")
          else
            commits=$(git log --pretty=format:"- %s")
          fi
          [ -z "$commits" ] && commits="No changes."
          {
            echo "commit_messages<<EOF"
            echo "$commits"
            echo "EOF"
          } >> "$GITHUB_ENV"

      # ---------- PRERELEASE ----------
      - name: Set current version for prerelease
        if: contains(env.msg, '[alphatag]')
        run: |
          ver=$(grep -oP 'Version:\s*\K[0-9.]+' style.css)
          echo "current_version=$ver" >> $GITHUB_ENV
          echo "new_version=$ver"     >> $GITHUB_ENV

      # ---------- RELEASE ----------
      - name: Bump version in style.css
        if: contains(env.msg, '[release]') && !contains(env.msg, '[alphatag]')
        id: bump_version
        run: |
          ver=$(grep -oP 'Version:\s*\K[0-9.]+' style.css)
          IFS='.' read -r major minor patch <<<"${ver}.0"   # default patch=0
          threshold=999
          if [ "$minor" -ge "$threshold" ]; then
            major=$((major + 1)); minor=0
          else
            minor=$((minor + 1))
          fi
          new="${major}.${minor}"
          perl -0777 -pe "s/Version:\s*[0-9.]+/Version: ${new}/" -i style.css
          echo "current_version=$ver"  >> $GITHUB_ENV
          echo "new_version=$new"      >> $GITHUB_ENV

      - name: Display current style.css after update
        if: always()
        run: cat style.css

      - name: Commit changes
        if: steps.bump_version.outcome == 'success'
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add style.css
          git commit -m "Bump version to ${{ env.new_version }}"
          git push

      - name: Set Git user (prerelease)
        if: contains(env.msg, '[alphatag]')
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Create new GitHub tag
        if: steps.bump_version.outcome == 'success'
        run: |
          git tag -a "v${{ env.new_version }}" -m "Version ${{ env.new_version }}"
          git push origin "v${{ env.new_version }}"

      - name: Create new GitHub prerelease tag
        if: contains(env.msg, '[alphatag]')
        run: |
          git tag -a "v${{ env.new_version }}-pre" -m "Prerelease v${{ env.new_version }}"
          git push origin "v${{ env.new_version }}-pre"

      - name: Create zip file of the repository
        if: contains(env.msg, '[release]') || contains(env.msg, '[alphatag]')
        run: |
          shopt -s extglob
          mkdir snn-brx-child-theme
          mv !(.git|.github*|snn-brx-child-theme) snn-brx-child-theme/
          zip -r snn-brx-child-theme.zip snn-brx-child-theme -x "*.git*" "*.github*"

      - name: Create GitHub release
        if: steps.bump_version.outcome == 'success'
        uses: softprops/action-gh-release@v1
        with:
          files: snn-brx-child-theme.zip
          tag_name:    "v${{ env.new_version }}"
          release_name: "Release v${{ env.new_version }}"
          body: |
            Version ${{ env.new_version }} release of the project.

            ## Changes
            ${{ env.commit_messages }}

      - name: Create GitHub prerelease
        if: contains(env.msg, '[alphatag]')
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          files: snn-brx-child-theme.zip
          tag_name:    "v${{ env.new_version }}-pre"
          release_name: "Prerelease v${{ env.new_version }}"
          body: |
            Prerelease v${{ env.new_version }} of the project.

            ## Changes
            ${{ env.commit_messages }}

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
